/*import { StatusBar } from 'expo-status-bar';
import { useState } from 'react';
import { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';
import { Image } from 'react-native';
import * as Font from 'expo-font';
import firebase from 'expo-firebase-app';
// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyAIWfXSuYz7U1piw5ycPDXZ2GZCNzRlVGc",
  authDomain: "carteira-vac-digital.firebaseapp.com",
  projectId: "carteira-vac-digital",
  storageBucket: "carteira-vac-digital.appspot.com",
  messagingSenderId: "358262989024",
  appId: "1:358262989024:web:5d94258817daf85a10b085",
  measurementId: "G-QM51D73E0D"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const analytics = getAnalytics(app);


if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}


const loginButtonColor = 'blue';
const registerButtonColor = 'green';
const forgotPasswordButtonColor = 'orange';

export default function App() {

  const [fontLoaded, setFontLoaded] = useState(false);

  const loadFont = async () => {
    await Font.loadAsync({
      'Arial Rounded MT Bold': require('./assets/fonts/ArialRoundedMTBold.ttf'),
    });
    setFontLoaded(true);
  };
  
  useEffect(() => {
    loadFont();
  }, []);
  

  const handleLogin = () => {
    if (validateInput()) {
      firebase.auth().signInWithEmailAndPassword(username, password)
        .then((userCredential) => {
          // Usuário logado com sucesso
          const user = userCredential.user;
          console.log(user);
        })
        .catch((error) => {
          // Tratamento de erro de login
          const errorCode = error.code;
          const errorMessage = error.message;
          console.log(errorCode, errorMessage);
          setError(errorMessage);
        });
    }
  };
  

const [username, setUsername] = useState('');
const [password, setPassword] = useState('');
const [error, setError] = useState('');


const validateInput = () => {
  if (!username || !password) {
    setError('Por favor, preencha todos os campos.');
    return false;
  }
  setError('');
  return true;
};

  return (
    <View style={styles.container}>
      <Text style={styles.headerText}> Carteira de Vacinação Digital </Text>
      < Image source={require('./assets/logo.png')} style={styles.logo} />
      <StatusBar style="auto" />
      < TextInput
                style={styles.input}
                placeholder="Username"
                onChangeText={(text) => setUsername(text)
                }
                value={username}
            />
            <TextInput
                style={styles.input}
                placeholder="Password"
                secureTextEntry={true}
                onChangeText={(text) => setPassword(text)}
                value={password}
            />

<TouchableOpacity
  style={[styles.button, { width: '80%', backgroundColor: loginButtonColor }]}
  onPress={handleLogin}
>
  <Text style={styles.buttonText}> Login </Text>
</TouchableOpacity>


            <View style={styles.buttonContainer}>
                <TouchableOpacity style={[styles.button, { width: '40%', backgroundColor: registerButtonColor }]} onPress={() => console.log('Cadastrar')}>
                    <Text style={styles.buttonText}> Cadastrar </Text>
                </TouchableOpacity>

                <TouchableOpacity style={[styles.button, { backgroundColor: forgotPasswordButtonColor }]} onPress={() => console.log('Recuperar senha')}>
                    <Text style={styles.buttonText}> Recuperar senha </Text>
                </TouchableOpacity>
            </View>
    </View>


  );

}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  input: {
    width: '80%',
    padding: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    marginBottom: 10,
},
button: {
    backgroundColor: 'blue',
    padding: 10,
    borderRadius: 5,
    marginTop: 10,
},
buttonText: {
    color: '#fff',
    fontWeight: 'bold',
    textAlign: 'center',
},
buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginVertical: 20,
    width: '80%',
},
logo: {
    width: 150,
    height: 150,
    resizeMode: 'contain',
    alignSelf: 'center',
    marginTop: 20,
    marginBottom: 20,
},
headerText: {
  //fontFamily: 'Arial Rounded MT Bold',
  fontSize: 23,
  textAlign: 'center',
  marginVertical: 20,
  color: '#0D0D0D',
},
});
